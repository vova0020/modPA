'use client';
/* eslint-disable */
// @ts-nocheck
import React, { Suspense, useState, useEffect, useRef } from 'react';
import { Canvas, useThree, useFrame } from '@react-three/fiber';
import { OrbitControls, useGLTF, Text3D, Html, CameraControls } from '@react-three/drei';
import Navbar from '@/app/components/navbar';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ —Ü–µ—Ö–∞
const WorkshopModel = () => {
    const { scene } = useGLTF('/ceh/warehouse.glb');
    scene.scale.set(2, 2, 2); // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
    scene.position.set(0, 0, 0); // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –≤ —Ü–µ–Ω—Ç—Ä–µ —Å—Ü–µ–Ω—ã

    return <primitive object={scene} />;
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ —Å—Ç–∞–Ω–∫–∞
import { Mesh, MeshStandardMaterial } from 'three';

const MachineModel1 = ({ onRightClick }) => {
    const { scene } = useGLTF('/ceh/stanok.glb'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
    scene.scale.set(15, 15, 15); // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫
    scene.position.set(45, -20, 80); // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫ –≤ —Å—Ü–µ–Ω–µ

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π –∑–µ–ª–µ–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –∫–æ –≤—Å–µ–º Mesh-–æ–±—ä–µ–∫—Ç–∞–º –º–æ–¥–µ–ª–∏
    const greenMaterial = new MeshStandardMaterial({
        color: 0x67ff05,             // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
        emissive: 0x67ff05,          // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è
        emissiveIntensity: 0       // –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è (—É–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    });

    scene.traverse((object) => {
        if (object instanceof Mesh) {
            object.material = greenMaterial; // –ó–∞–º–µ–Ω—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª
        }
    });

    return <primitive object={scene} onContextMenu={onRightClick} />;
};

const MachineModel2 = ({ onRightClick }) => {
    const { scene } = useGLTF('/ceh/stanok2.glb'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
    scene.scale.set(15, 15, 15); // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫
    scene.position.set(-55, -20, 80); // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫ –≤ —Å—Ü–µ–Ω–µ

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π –∑–µ–ª–µ–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –∫–æ –≤—Å–µ–º Mesh-–æ–±—ä–µ–∫—Ç–∞–º –º–æ–¥–µ–ª–∏
    const greenMaterial = new MeshStandardMaterial({
        color: 0xdd9200,             // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
        emissive: 0xdd9200,          // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è
        emissiveIntensity: 0       // –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è (—É–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    });

    scene.traverse((object) => {
        if (object instanceof Mesh) {
            object.material = greenMaterial; // –ó–∞–º–µ–Ω—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª
        }
    });

    return <primitive object={scene} onContextMenu={onRightClick} />;
};
const MachineModel3 = ({ onRightClick }) => {
    const { scene } = useGLTF('/ceh/stanok3.glb'); // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø—É—Ç—å –∫ –≤–∞—à–µ–π –º–æ–¥–µ–ª–∏
    scene.scale.set(15, 15, 15); // –ú–∞—Å—à—Ç–∞–±–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫
    scene.position.set(-110, -20, 10); // –ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–µ–º —Å—Ç–∞–Ω–æ–∫ –≤ —Å—Ü–µ–Ω–µ

    // –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–æ–≤—ã–π –∑–µ–ª–µ–Ω—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª –∫–æ –≤—Å–µ–º Mesh-–æ–±—ä–µ–∫—Ç–∞–º –º–æ–¥–µ–ª–∏
    const greenMaterial = new MeshStandardMaterial({
        color: 0x9e9e9e,             // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–¥–∞–Ω–Ω—ã–π —Ü–≤–µ—Ç
        emissive: 0x9e9e9e,          // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Å–≤–µ—á–µ–Ω–∏—è
        emissiveIntensity: 0        // –ò–Ω—Ç–µ–Ω—Å–∏–≤–Ω–æ—Å—Ç—å —Å–≤–µ—á–µ–Ω–∏—è (—É–≤–µ–ª–∏—á—å—Ç–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)
    });

    scene.traverse((object) => {
        if (object instanceof Mesh) {
            object.material = greenMaterial; // –ó–∞–º–µ–Ω—è–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª
        }
    });

    // –ü–æ–≤–µ—Ä–Ω—É—Ç—å –æ–±—ä–µ–∫—Ç –Ω–∞ 90 –≥—Ä–∞–¥—É—Å–æ–≤ –ø–æ –æ—Å–∏ Y (–ø–æ —á–∞—Å–æ–≤–æ–π —Å—Ç—Ä–µ–ª–∫–µ)
    scene.rotation.set(0, Math.PI / -2, 0);

    return <primitive object={scene} onContextMenu={onRightClick} />;
};


// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ–±—ä–µ–º–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç —Å–ª–µ–¥–æ–≤–∞—Ç—å –∑–∞ –∫–∞–º–µ—Ä–æ–π
const MachineLabel1 = () => {
    const { camera } = useThree(); // –ü–æ–ª—É—á–∞–µ–º –∫–∞–º–µ—Ä—É
    const textRef = React.useRef();

    // –ö–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–∞–º–µ—Ä—ã
    useFrame(() => {
        if (textRef.current) {
            // –û—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞–º–µ—Ä—É
              // @ts-ignore
            textRef.current.lookAt(camera.position);
        }
    });

    return (
        <Text3D
            ref={textRef}
            position={[60, 8, 80]} // –ü–æ–∑–∏—Ü–∏—è –Ω–∞–¥ –ø–µ—Ä–≤—ã–º —Å—Ç–∞–Ω–∫–æ–º
            font="https://cdn.jsdelivr.net/npm/three@0.138.0/examples/fonts/helvetiker_regular.typeface.json" // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
              // @ts-ignore
            fontSize={4} // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            color="#ffffff" // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
            anchorX="center" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ X
            anchorY="middle" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ Y
            scale={[4, 4, 4]} // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        >
            HOLZMA_HPP_3503838
        </Text3D>
    );
};

const MachineLabel2 = () => {
    const { camera } = useThree(); // –ü–æ–ª—É—á–∞–µ–º –∫–∞–º–µ—Ä—É
    const textRef = React.useRef();

    // –ö–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–∞–º–µ—Ä—ã
    useFrame(() => {
        if (textRef.current) {
            // –û—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞–º–µ—Ä—É
              // @ts-ignore
            textRef.current.lookAt(camera.position);
        }
    });

    return (
        <Text3D
            ref={textRef}
            position={[-25, 8, 80]} // –ü–æ–∑–∏—Ü–∏—è –Ω–∞–¥ –≤—Ç–æ—Ä—ã–º —Å—Ç–∞–Ω–∫–æ–º
            font="https://cdn.jsdelivr.net/npm/three@0.138.0/examples/fonts/helvetiker_regular.typeface.json" // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
              // @ts-ignore
            fontSize={5} // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            color="#0011e1" // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
            anchorX="center" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ X
            anchorY="middle" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ Y
            scale={[4, 4, 4]} // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        >
            HOMAG_OPTIMAT_KL_26
        </Text3D>
    );
};
const MachineLabel3 = () => {
    const { camera } = useThree(); // –ü–æ–ª—É—á–∞–µ–º –∫–∞–º–µ—Ä—É
    const textRef = React.useRef();

    // –ö–∞–∂–¥—ã–π –∫–∞–¥—Ä –æ–±–Ω–æ–≤–ª—è–µ–º –ø–æ–∑–∏—Ü–∏—é —Ç–µ–∫—Å—Ç–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ –∫–∞–º–µ—Ä—ã
    useFrame(() => {
        if (textRef.current) {
            // –û—Ä–∏–µ–Ω—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –Ω–∞ –∫–∞–º–µ—Ä—É
              // @ts-ignore
            textRef.current.lookAt(camera.position);
        }
    });

    return (
        <Text3D
            ref={textRef}
            position={[-110, 8, 20]} // –ü–æ–∑–∏—Ü–∏—è –Ω–∞–¥ –≤—Ç–æ—Ä—ã–º —Å—Ç–∞–Ω–∫–æ–º
            font="https://cdn.jsdelivr.net/npm/three@0.138.0/examples/fonts/helvetiker_regular.typeface.json" // –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —à—Ä–∏—Ñ—Ç
              // @ts-ignore
            fontSize={5} // –†–∞–∑–º–µ—Ä —à—Ä–∏—Ñ—Ç–∞
            color="#0011e1" // –¶–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞
            anchorX="center" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ X
            anchorY="middle" // –¶–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –æ—Å–∏ Y
            scale={[4, 4, 4]} // –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞
        >
            Bima_400V
        </Text3D>
    );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Å–ø–ª—ã–≤–∞—é—â–µ–≥–æ –æ–∫–Ω–∞
const InfoWindow = ({ position, onClose }) => {
    return (
        <Html
            position={position}
            center
            style={{
                perspective: '500px',
                transformStyle: 'preserve-3d',
                transition: 'transform 0.3s ease, opacity 0.3s ease',
                opacity: 1,
                transform: 'scale(1) rotateX(0deg)',
            }}
            onPointerEnter={(e) => {
                  // @ts-ignore
                e.target.style.transform = 'scale(1.05) rotateX(2deg)';
            }}
            onPointerLeave={(e) => {
                  // @ts-ignore
                e.target.style.transform = 'scale(1) rotateX(0deg)';
            }}
            onClick={onClose}
        >
            <div
                style={{
                    backgroundColor: 'rgba(20, 20, 20, 0.95)',
                    color: '#ffffff',
                    padding: '20px',
                    borderRadius: '12px',
                    border: '1px solid rgba(255, 255, 255, 0.2)',
                    boxShadow: '0 10px 30px rgba(0, 0, 0, 0.5)',
                    fontFamily: 'Arial, sans-serif',
                    transform: 'translateZ(10px)',
                    display: 'flex',
                    flexDirection: 'column',
                    alignItems: 'center',
                    gap: '10px',
                }}
            >
                <div
                    style={{
                        fontSize: '20px',
                        fontWeight: 'bold',
                        marginBottom: '10px',
                        color: '#67ff05',
                    }}
                >
                    üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                </div>
                <div style={{ fontSize: '16px', lineHeight: '1.5' }}>
                    <div>–í—ã—Ä–∞–±–æ—Ç–∫–∞: <strong>300 —à—Ç—É–∫</strong></div>
                    <div>–°—Ç–∞–Ω–æ–∫: <strong>HOLZMA_HPP_3503838</strong></div>
                </div>
                <button
                    style={{
                        marginTop: '15px',
                        padding: '10px 20px',
                        backgroundColor: '#67ff05',
                        border: 'none',
                        borderRadius: '8px',
                        color: '#000',
                        fontWeight: 'bold',
                        cursor: 'pointer',
                        transition: 'background-color 0.3s ease',
                    }}
                      // @ts-ignore
                    onPointerEnter={(e) => (e.target.style.backgroundColor = '#4ecc03')}
                      // @ts-ignore
                    onPointerLeave={(e) => (e.target.style.backgroundColor = '#67ff05')}
                >
                    –ó–∞–∫—Ä—ã—Ç—å
                </button>
            </div>
        </Html>
    );
};


// –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã
export default function WorkshopPage() {
    const [isLoading, setIsLoading] = useState(true);
    const [showWindow, setShowWindow] = useState(false);
    const [windowPosition, setWindowPosition] = useState([0, 0, 0]);

    const handleRightClickMachine1 = (e) => {
        setWindowPosition([23, 2, 40]); // –ü–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Å—Ç–∞–Ω–∫–∞
        setShowWindow(true);
    };

    const handleRightClickMachine2 = (e) => {
        setWindowPosition([-28, 2, 40]); // –ü–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–∞–Ω–∫–∞
        setShowWindow(true);
    };
    const handleRightClickMachine3 = (e) => {
        setWindowPosition([-80, 2, 40]); // –ü–æ–∑–∏—Ü–∏—è –æ–∫–Ω–∞ –¥–ª—è –≤—Ç–æ—Ä–æ–≥–æ —Å—Ç–∞–Ω–∫–∞
        setShowWindow(true);
    };

    const handleClickOutside = () => {
        setShowWindow(false);
    };

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—É—Å–∫–∞–Ω–∏—è –ª–µ–≤–æ–π –∫–Ω–æ–ø–∫–∏ –º—ã—à–∏
    const handlePointerUp = () => {
        setShowWindow(false);
    };

    return (
        <div onClick={handleClickOutside}>
            <Navbar />
            <div style={{ width: '100vw', height: '90vh', position: 'relative' }}>
                {isLoading && (
                    <div
                        style={{
                            position: 'absolute',
                            top: '50%',
                            left: '50%',
                            transform: 'translate(-50%, -50%)',
                            color: '#fff',
                            fontSize: '20px',
                        }}
                    >
                        –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏...
                    </div>
                )}

                <Canvas
                    camera={{ position: [0, 5, -15], fov: 85 }}
                >
                    <ambientLight intensity={0.5} />
                    <directionalLight position={[10, 10, 10]} intensity={3} color={0xffffff} />
                    <Suspense fallback={null}>
                        <WorkshopModel />
                        <MachineModel1 onRightClick={handleRightClickMachine1} />
                        <MachineLabel1 />
                        <MachineModel2 onRightClick={handleRightClickMachine2} />
                        <MachineLabel2 />
                        <MachineModel3 onRightClick={handleRightClickMachine3} />
                        <MachineLabel3 />
                        {showWindow && <InfoWindow position={windowPosition} onClose={handleClickOutside} />}
                    </Suspense>
                    <CameraControls
                        // maxDistance={200}  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –æ—Ç –∫–∞–º–µ—Ä—ã
                        // minDistance={1}    // –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –¥–∏—Å—Ç–∞–Ω—Ü–∏—è –æ—Ç –∫–∞–º–µ—Ä—ã
                        dollySpeed={2}     // –°–∫–æ—Ä–æ—Å—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∞
                          // @ts-ignore
                        panSpeed={4}       // –°–∫–æ—Ä–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è –∫–∞–º–µ—Ä—ã
                        dampingFactor={0.1} // "–°–≥–ª–∞–∂–∏–≤–∞–Ω–∏–µ" –¥–≤–∏–∂–µ–Ω–∏—è
                        infinityDolly={false} // –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Å—à—Ç–∞–±–∞
                    />
                </Canvas>
            </div>
        </div>
    );
}